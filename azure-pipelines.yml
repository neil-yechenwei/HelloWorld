jobs:
  - job: CopyFiles
    pool:
      vmImage: "ubuntu-16.04"

    steps:
      - task: UsePythonVersion@0
        displayName: "Use Python 3.6"
        inputs:
          versionSpec: 3.6
          addToPath: true
          architecture: "x64"

      - powershell: |
          echo $(BUILD.SOURCEBRANCH)
          if ("$(BUILD.SOURCEBRANCH)" -match "^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+$") { ((Get-Content -path "$(BUILD.REPOSITORY.LOCALPATH)\iotedgehubdev\__init__.py" -Raw) -replace "__AIkey__ = '.*'","__AIkey__ = '$(AI_KEY)'") | Set-Content -Path "$(BUILD.REPOSITORY.LOCALPATH)\iotedgehubdev\__init__.py" }
        displayName: "PowerShell Script"

      - script: |
          pip install setuptools
          pip install wheel
          pushd $(BUILD.REPOSITORY.LOCALPATH)
          python setup.py bdist_wheel
          popd
        displayName: "cmd Script"

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(BUILD.REPOSITORY.LOCALPATH)/dist
          TargetFolder: $(Build.ArtifactStagingDirectory)
        displayName: "Copy Files to: dis"

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: build-artifact-drop

  - job: Linux
    pool:
      vmImage: "ubuntu-16.04"

    strategy:
      matrix:
        Python27:
          python.version: "2.7"
        Python36:
          python.version: "3.6"
      maxParallel: 2

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
          architecture: "x64"

      - bash: |
          export DEVICE_CONNECTION_STRING=$(DEVICE_CONNECTION_STRING)
        displayName: "Install cookiecutter"

      - script: |
          pip install --upgrade pip
          pip install pytest
        condition: succeededOrFailed()
        displayName: "Install cookiecutter"

      - script: |
          pytest
        displayName: "Install IoT Edge Module and Run tests with pytest"

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "**/test-results.xml"
          testRunTitle: "Publish test results for Python $(python.version)"
